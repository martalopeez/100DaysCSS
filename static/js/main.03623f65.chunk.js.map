{"version":3,"sources":["components/day1/Day1.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Day1","react_default","a","createElement","className","App","_useState","useState","_useState2","Object","slicedToArray","day","setDay","src","alt","onClick","day1_Day1","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"8NAsBeA,MAnBf,WACI,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAM,QAAWH,EAAAC,EAAAC,cAAA,WACjCF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAQ,qBCUvBC,MArBf,WAAe,IAAAC,EACSC,mBAAS,GAAEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1BK,EAAGH,EAAA,GAAEI,EAAMJ,EAAA,GAClB,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKU,IAAI,4EAA4ET,UAAU,WAAWU,IAAI,QAC5Gb,EAAAC,EAAAC,cAAA,SAAG,2BAELF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQY,QAAS,kBAAMH,EAAO,IAAIR,UAAU,OAAM,SAClDH,EAAAC,EAAAC,cAAA,UAAQY,QAAS,kBAAMH,EAAO,IAAIR,UAAU,OAAM,UAE5C,GAAPO,GACCV,EAAAC,EAAAC,cAACa,EAAI,SCJAC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCHDY,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,WAAU,KACflC,EAAAC,EAAAC,cAACiC,EAAG,QAORnB","file":"static/js/main.03623f65.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Day1.css';\r\n\r\nfunction Day1() {\r\n    return (\r\n    <div className=\"frame\">\r\n        <div className=\"center\">\r\n            <div className=\"number\">\r\n                <div className=\"one-one\"></div>\r\n                <div className=\"one-two\"></div>\r\n                <div className=\"zero-one\"></div>\r\n                <div className=\"zero-two\"></div>\r\n            </div>\r\n            <div className=\"divtext\">\r\n              <span className=\"big\">Days</span><br></br>\r\n              <span className=\"small\">CSS CHALLENGE</span>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nexport default Day1;","import React, { useState } from 'react';\nimport './App.css';\nimport Day1 from './components/day1/Day1';\n\nfunction App() {\n  const [day, setDay] = useState(0);\n  return (\n    <div className=\"App\">\n      <body className=\"App-header\"> \n      <img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original.svg\" className='App-logo' alt='css'/>\n        <p>100 Days CSS Challenge</p>\n      </body>\n      <div>\n        <div className='buttons'>\n          <button onClick={() => setDay(1)} className='btn'>Day 1</button>\n          <button onClick={() => setDay(2)} className='btn'>Day 2</button>\n        </div>\n        {day == 1 && (\n          <Day1 />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}